Counting sort::
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
import java.io.*;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
    int[] arr=new int[n];
    for(int i=0;i<n;i++)
    {
        arr[i]=sc.nextInt();
    }
    int c[]=new int[10];
    int a[]=new int[n];
    Arrays.fill(c,0);
    for(int i=0;i<n;i++)
    {
        ++c[arr[i]];
    }
    for(int i=1;i<10;i++)
    {
        c[i]+=c[i-1];
    }
    for(int i=n-1;i>=0;i--)
    {
        a[c[arr[i]]-1]=arr[i];
        --c[arr[i]];
    }
    for(int i=0;i<n;i++)
    {
        System.out.println(arr[i]);
    }
    for(int i=0;i<n;i++)
    {
        System.out.println(a[i]);
    }
    
    }
}


-------------------------------------------------------------------------------------------------------------------------------
Selection sort::


import java.util.*;
import java.io.*;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        boolean swapflag;
        
        for(int i=0;i<n;i++)
        arr[i]=sc.nextInt();
        //this sort is not input dependent;
        int minindex;// to have index whose value is minimum 
        for(int i=0;i<n-1;i++) //no of runs
        {  
            minindex=i;
            for(int j=i+1;j<n;j++)
            {
                if(arr[j]<arr[minindex])
                minindex=j;
            }
            int s=arr[minindex];
            arr[minindex]=arr[i];
            arr[i]=s;
        }
        for(int i=0;i<n;i++)
        System.out.println(arr[i]);
    }
}

-----------------------------------------------------------------------------------------------------------------------------
Bubble sort::

import java.util.*;
import java.io.*;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        boolean swapflag;
        
        for(int i=0;i<n;i++)
        arr[i]=sc.nextInt();
        //this sort is input dependent;
        
        for(int i=0;i<n-1;i++) //no of runs
        {  swapflag=false; //to check it is a best case (swapping happens or not)
            for(int j=0;j<n-i-1;j++) // swapping (always elements are sorted at last)
            {
                if(arr[j]>arr[j+1])
                {
                    int t=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=t;
                    swapflag=true;
                }
            }
            if(swapflag==false)
            {
                break;
            }
            
        }
        for(int i=0;i<n;i++)
        System.out.println(arr[i]);
    }
}

--------------------------------------------------------------------------------------------------------------------------------
